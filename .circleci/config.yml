version: 2

jobs:
  # The build job
  build:
    working_directory: ~/project
    docker:
    - image: circleci/node:10.13
    steps:
    # Checkout the code from the branch into the working_directory
    - checkout
    # Log the current branch
    - run:
        name: Show current branch
        command: echo ${CIRCLE_BRANCH}
    # Restore local dependencies from cache
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        - v1-dependencies-
    # Install project dependencies
    - run:
        name: Install local dependencies
        command: npm install
    # Cache local dependencies if they don't exist
    - save_cache:
        key: v1-dependencies-{{ checksum "package.json" }}
        paths:
        - node_modules
    # Build project with different configuration based on
    # the current branch
    - run:
        name: Building
        command: npm run build
    # Cache the dist folder for the deploy job
    - save_cache:
        key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
        paths:
        - dist

  # The deploy job
  deploy:
    working_directory: ~/project
    docker:
    - image: circleci/node:10.13
    steps:
    # Log the current branch
    - run:
        name: Show current branch
        command: echo ${CIRCLE_BRANCH}
    # Restore cache from the build job which contains the
    # dist folder that needs to be deployed
    - restore_cache:
        key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
    # Install AWS cli
    - run:
        name: Install aws cli
        command:
          sudo apt-get -y -qq install awscli
    # Deploy to the S3 bucket corresponding to the current branch
    - run:
        name: Deploy to S3
        command: aws --region us-east-1 s3 sync dist s3://camaverse.com --delete

workflows:
  version: 2
  # The build and deploy workflow
  build_and_deploy:
    jobs:
    - build
    # The deploy job will only run on the filtered branches and
    # require the build job to be successful before it starts
    - deploy:
        requires:
        - build
        filters:
          branches:
            only:
            - develop
            - staging
            - master